{"version":3,"sources":["components/CreateToDo.js","services/create.js","services/delete.js","services/read.js","services/update.js","components/TodoItem.js","components/TodoContainer.js","App.js","index.js"],"names":["CreateTodo","setToDoCreate","useForm","register","handleSubmit","reset","className","onSubmit","data","placeholder","id","create","axios","post","deleteToDo","url","delete","read","get","update","put","TodoItem","toDos","handleUpdate","setIsCompleted","task","student","completed","isCompleted","type","checked","onClick","icon","faEdit","TodoContainer","toDoCreate","useState","setData","idDelete","setIdDelete","idUpdate","setIdUpdate","useEffect","then","response","todos","filter","value","listTodos","map","element","faTrash","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cecd30fa.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst CreateTodo = ({ setToDoCreate }) => {\r\n    const { register, handleSubmit, reset } = useForm();\r\n\r\n    const onSubmit = data => {\r\n        setToDoCreate(data);\r\n        reset()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"form-create\" onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                <div>\r\n                    <input placeholder=\"Write a task\" id=\"task\" {...register(\"task\")} />\r\n                </div>\r\n                <div>\r\n                    <input placeholder=\"Write your name\" {...register(\"student\")} />\r\n                </div>\r\n\r\n                <button>Save</button>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateTodo\r\n","\r\nimport axios from \"axios\";\r\n\r\nconst create=(data)=>{\r\n\r\n    const url='https://todos-go.herokuapp.com/api/todos';\r\n    const promise=axios.post(url, data);\r\n    return promise;\r\n}\r\n\r\nexport default create;","\r\nimport axios from \"axios\";\r\n\r\nconst deleteToDo=(id)=>{\r\n    const url=`https://todos-go.herokuapp.com/api/todos/${id}`;\r\n    const promise=axios.delete(url)\r\n    return promise;\r\n}\r\n\r\nexport default deleteToDo;\r\n","import axios from \"axios\";\r\n\r\nconst read=()=>{\r\n\r\n    const url='https://todos-go.herokuapp.com/api/todos';\r\n    const promise=axios.get(url)\r\n    return promise;\r\n}\r\n\r\nexport default read;","\r\nimport axios from \"axios\";\r\n\r\nconst update = (id, data) => {\r\n\r\n    const url = `https://todos-go.herokuapp.com/api/todos/${id}`;\r\n    const promise = axios.put(url, data);\r\n    return promise;\r\n}\r\n\r\nexport default update;","import React from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst TodoItem = ({ toDos, handleUpdate, setIsCompleted }) => {\r\n\r\n    const { register, handleSubmit} = useForm();\r\n\r\n    const onSubmit = data => {\r\n        setIsCompleted({\r\n            \"task\": toDos.task,\r\n            \"student\": toDos.student,\r\n            \"isCompleted\": data.completed,\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n        <form className=\"form-item\" onSubmit={handleSubmit(onSubmit)}>\r\n            {\r\n                toDos.isCompleted ?\r\n                    <>\r\n                        <input type=\"checkbox\" id=\"is-completed\" checked  {...register(\"completed\")} />\r\n                        <button onClick={() => handleUpdate(toDos.id)}> <FontAwesomeIcon icon={faEdit} /></button>\r\n                    </>\r\n\r\n                    :\r\n                    <>\r\n                        <input type=\"checkbox\" id=\"is-completed\" {...register(\"completed\")} />\r\n                        <button onClick={() => handleUpdate(toDos.id)}> <FontAwesomeIcon icon={faEdit} /></button>\r\n                    </>\r\n\r\n            }\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TodoItem\r\n","import React, { useEffect, useState } from 'react'\r\nimport create from '../services/create';\r\nimport deleteToDo from '../services/delete';\r\nimport read from '../services/read';\r\nimport update from '../services/update';\r\nimport TodoItem from './TodoItem';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst TodoContainer = ({ toDoCreate }) => {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [idDelete, setIdDelete] = useState(\"\");\r\n    const [idUpdate, setIdUpdate] = useState(\"\");\r\n    const [isCompleted, setIsCompleted] = useState({});\r\n\r\n    // useEffect Read\r\n    useEffect(() => {\r\n        read().then(response => setData(response.data.todos))\r\n    }, []);\r\n\r\n    // useEffect Delete\r\n    useEffect(() => {\r\n        deleteToDo(idDelete).then(() => {\r\n            setData(\r\n                data.filter(value => value.id !== idDelete)\r\n            )\r\n        })\r\n    }, [idDelete]);\r\n\r\n    // useEffect create\r\n    useEffect(() => {\r\n        create(toDoCreate).then((response) => {\r\n            setData([...data, response.data])\r\n        })\r\n    }, [toDoCreate]);\r\n\r\n    // useEffect Update\r\n    useEffect(() => {\r\n        update(idUpdate, isCompleted).then(() => {\r\n            setData(\r\n                [...data.filter(value => value.id !== isCompleted.id)]\r\n            )\r\n        })\r\n\r\n    }, [isCompleted]);\r\n\r\n    const handleDelete = (id) => {\r\n        setIdDelete(id)\r\n    };\r\n\r\n    const handleUpdate = (id) => {\r\n        setIdUpdate(id)\r\n    };\r\n\r\n    const listTodos = data.map(element => {\r\n        return (\r\n            <div key={element.id} className=\"container-list\">\r\n                <div className=\"tasks\">\r\n                    <TodoItem\r\n                        toDos={element}\r\n                        handleUpdate={handleUpdate}\r\n                        setIdUpdate={setIdUpdate}\r\n                        setIsCompleted={setIsCompleted}\r\n                    />\r\n                    <span>{element.task}</span> -\r\n                    <span>{element.student}</span>\r\n                </div>\r\n\r\n                <div>\r\n                    <button\r\n                        onClick={() => handleDelete(element.id)}>\r\n                        <FontAwesomeIcon icon={faTrash} />\r\n                    </button>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div className=\"container-todo\">\r\n            {\r\n                listTodos\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoContainer;\r\n","import {useState} from \"react\";\nimport CreateTodo from \"./components/CreateToDo\";\nimport TodoContainer from \"./components/TodoContainer\";\n\nfunction App() {\n\n  const [toDoCreate, setToDoCreate]=useState({});\n  \n\n  return (\n    <div className=\"App\">\n      <h1>ToDo App</h1>\n      <CreateTodo setToDoCreate={setToDoCreate}/>\n      <TodoContainer toDoCreate={toDoCreate}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}